

questions
const netState = await NetInfo.fetch();
if (!netState.isConnected) {
        const offlineQuestions = await getOfflineQuestionsByForm(formId);
        const filtered = offlineQuestions.filter(q => q.panel_id === panelId);
        const mappedQuestions: IQuestion[] = filtered.map(q => ({
          id: q.id,
          name: q.name,
          type: q.type,
          owner: q.owner,
          required: q.required,
          order: q.order,
          description: q.description,
          catalog_id: q.catalog_id,
          panel_id: q.panel_id,
          created_at: q.created_at,
          updated_at: q.updated_at,
          show_list: q.show_list,
          filters: (() => {
            try {
              return JSON.parse(q.filters || '{}');
            } catch {
              return {};
            }
          })(),
          question_options: []
        }));
        dispatch(onLoadQuestions(mappedQuestions));
        dispatch(onSetErrorMessage("Preguntas cargadas desde almacenamiento local"));
        return;
      }
      for (const question of data.questions) {
        await saveQuestionOffline(question);
      }

      dispatch(onLoadQuestions(data.questions));
      dispatch(onSetErrorMessage(null));